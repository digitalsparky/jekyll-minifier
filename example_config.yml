# Jekyll Minifier - Enhanced CSS Compression Configuration Example
# 
# This configuration showcases the new cssminify2 v2.1.0 enhanced features
# integrated with Jekyll Minifier v0.2.1+

# Basic minification controls (existing functionality - UNCHANGED)
jekyll-minifier:
  # File type compression toggles
  compress_css: true          # Enable/disable CSS compression
  compress_javascript: true   # Enable/disable JavaScript compression  
  compress_json: true         # Enable/disable JSON compression
  
  # File exclusions (supports glob patterns)
  exclude:
    - '*.min.js'              # Skip already minified JavaScript
    - '*.min.css'             # Skip already minified CSS
    - 'vendor/**/*'           # Skip vendor directory
    - 'node_modules/**/*'     # Skip node_modules
  
  # HTML compression options (existing functionality)
  remove_comments: true               # Remove HTML comments
  remove_intertag_spaces: false      # Remove spaces between tags
  remove_multi_spaces: true          # Collapse multiple spaces
  compress_css: true                  # Compress inline CSS in HTML
  compress_javascript: true          # Compress inline JS in HTML
  
  # JavaScript/Terser configuration (existing functionality)
  terser_args:
    compress:
      drop_console: true      # Remove console.log statements
    mangle: true              # Shorten variable names
  
  # Security: Pattern preservation (existing functionality)
  preserve_patterns:
    - '<%.*?%>'               # Preserve ERB/JSP patterns
    - '\{\{.*?\}\}'           # Preserve template patterns
  preserve_php: true          # Preserve PHP tags

  # ==========================================
  # NEW: Enhanced CSS Compression Features
  # ==========================================
  
  # Enable enhanced CSS compression mode (cssminify2 v2.1.0+)
  # DEFAULT: false (maintains backward compatibility)
  css_enhanced_mode: true
  
  # Enhanced CSS compression options (only used when css_enhanced_mode: true)
  
  # Merge duplicate CSS selectors for better compression
  # Example: .btn{color:red} .btn{margin:5px} → .btn{color:red;margin:5px}
  # DEFAULT: false
  css_merge_duplicate_selectors: true
  
  # Optimize CSS shorthand properties
  # Example: margin-top:10px;margin-right:10px;margin-bottom:10px;margin-left:10px → margin:10px
  # DEFAULT: false  
  css_optimize_shorthand_properties: true
  
  # Advanced color optimization beyond standard compression
  # Example: rgba(255,255,255,1.0) → #fff, rgb(0,0,0) → #000
  # DEFAULT: false
  css_advanced_color_optimization: true
  
  # Preserve IE-specific CSS hacks (recommended: true for compatibility)
  # Example: *zoom:1, _position:relative (IE6/7 hacks)
  # DEFAULT: true
  css_preserve_ie_hacks: true
  
  # Compress CSS custom properties (variables) where safe
  # Example: --primary-color optimization and usage analysis
  # DEFAULT: false
  css_compress_variables: false

# ==========================================
# Configuration Presets
# ==========================================

# CONSERVATIVE PRESET (maximum compatibility)
# jekyll-minifier:
#   compress_css: true
#   compress_javascript: true
#   compress_json: true
#   css_enhanced_mode: false    # Use standard compression only

# BALANCED PRESET (recommended for most sites)
# jekyll-minifier:
#   compress_css: true
#   compress_javascript: true
#   compress_json: true
#   css_enhanced_mode: true
#   css_merge_duplicate_selectors: true
#   css_advanced_color_optimization: true
#   css_preserve_ie_hacks: true

# AGGRESSIVE PRESET (maximum compression)
# jekyll-minifier:
#   compress_css: true
#   compress_javascript: true
#   compress_json: true
#   css_enhanced_mode: true
#   css_merge_duplicate_selectors: true
#   css_optimize_shorthand_properties: true
#   css_advanced_color_optimization: true
#   css_preserve_ie_hacks: true
#   css_compress_variables: true

# ==========================================
# Performance Notes
# ==========================================

# Enhanced CSS compression provides significant additional compression:
# - Standard compression: ~30-40% reduction
# - Enhanced compression: Additional 20-30% reduction beyond standard
# - Performance impact: ~13% slower processing (acceptable for production builds)
# - Memory usage: No significant increase

# Compatibility Notes:
# - Enhanced mode is opt-in (css_enhanced_mode: false by default)
# - Standard compression behavior unchanged when enhanced mode disabled
# - All existing configurations continue to work without modification
# - Enhanced features require cssminify2 v2.1.0+

# Migration Guide:
# 1. Existing users: No changes required (enhanced mode disabled by default)
# 2. New features: Add css_enhanced_mode: true and desired options
# 3. Testing: Enable enhanced mode in staging first to validate output
# 4. Performance: Monitor build times if using CI/CD with time constraints